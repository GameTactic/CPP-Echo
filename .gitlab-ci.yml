build-master:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

build:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - master

.deploy: &deploy_tmpl
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add openssh-client
    - mkdir ~/.ssh
    - echo "$PRIV_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - chmod 700 ~/.ssh
    - eval "$(ssh-agent -s)"

deploy-eu:
  <<: *deploy_tmpl
  environment:
    name: production_eu
    url: https://eu.gametactic.eu
  script:
    - ssh-keyscan -t rsa $HOST_EU > ~/.ssh/known_hosts
    - >
      ssh deployer@$HOST_EU "
      sudo eu/echo/sbin/update
      "
  dependencies:
    - build-master
  when: manual
  only:
    - master
